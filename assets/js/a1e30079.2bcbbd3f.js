"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[19],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8263:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:35},i="Optimize Re-Renders with shouldComponentUpdate",p={unversionedId:"react/optimize-re-renders-with-shouldcomponentupdate",id:"react/optimize-re-renders-with-shouldcomponentupdate",title:"Optimize Re-Renders with shouldComponentUpdate",description:"---",source:"@site/docs/react/35-optimize-re-renders-with-shouldcomponentupdate.md",sourceDirName:"react",slug:"/react/optimize-re-renders-with-shouldcomponentupdate",permalink:"/docs/react/optimize-re-renders-with-shouldcomponentupdate",draft:!1,tags:[],version:"current",sidebarPosition:35,frontMatter:{sidebar_position:35},sidebar:"tutorialSidebar",previous:{title:"Add Event Listeners",permalink:"/docs/react/add-event-listeners"},next:{title:"Introducing Inline Styles",permalink:"/docs/react/introducing-inline-styles"}},s={},l=[],c={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"optimize-re-renders-with-shouldcomponentupdate"},"Optimize Re-Renders with shouldComponentUpdate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"class OnlyEvens extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('Should I update?')\n    if (nextProps.value % 2 == 0) {\n      return true\n    }\n    return false\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log('Receiving new props...')\n  }\n  componentDidUpdate() {\n    console.log('Component re-rendered.')\n  }\n  render() {\n    return <h1>{this.props.value}</h1>\n  }\n}\n\nclass Controller extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: 0,\n    }\n    this.addValue = this.addValue.bind(this)\n  }\n  addValue() {\n    this.setState({\n      value: this.state.value + 1,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this.addValue}>Add</button>\n        <OnlyEvens value={this.state.value} />\n      </div>\n    )\n  }\n}\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"So far, if any component receives new ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," or new ",(0,o.kt)("inlineCode",{parentName:"p"},"props"),", it re-renders itself and all its children. This is usually okay. But React provides a lifecycle method you can call when child components receive new ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"props"),", and declare specifically if the components should update or not. The method is ",(0,o.kt)("inlineCode",{parentName:"p"},"shouldComponentUpdate()"),", and it takes ",(0,o.kt)("inlineCode",{parentName:"p"},"nextProps")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"nextState")," as parameters."),(0,o.kt)("p",null,"This method is a useful way to optimize performance. For example, the default behavior is that your component re-renders when it receives new ",(0,o.kt)("inlineCode",{parentName:"p"},"props"),", even if the props haven't changed. You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"shouldComponentUpdate()")," to prevent this by comparing the props. The method must return a ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")," value that tells React whether or not to update the component. You can compare the current props (",(0,o.kt)("inlineCode",{parentName:"p"},"this.props"),") to the next props (",(0,o.kt)("inlineCode",{parentName:"p"},"nextProps"),") to determine if you need to update or not, and return true or false accordingly."))}u.isMDXComponent=!0}}]);