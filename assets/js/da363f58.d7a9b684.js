"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1064],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:26},i="Use State to Toggle an Element",s={unversionedId:"react/use-state-to-toggle-an-element",id:"react/use-state-to-toggle-an-element",title:"Use State to Toggle an Element",description:"---",source:"@site/docs/react/26-use-state-to-toggle-an-element.md",sourceDirName:"react",slug:"/react/use-state-to-toggle-an-element",permalink:"/docs/react/use-state-to-toggle-an-element",draft:!1,tags:[],version:"current",sidebarPosition:26,frontMatter:{sidebar_position:26},sidebar:"tutorialSidebar",previous:{title:"Bind 'this' to a Class Method",permalink:"/docs/react/bind-this-to-a-class-method"},next:{title:"Write a Simple Counter",permalink:"/docs/react/write-a-simple-counter"}},l={},c=[],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-state-to-toggle-an-element"},"Use State to Toggle an Element"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"class MyComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visibility: false,\n    }\n    this.toggleVisibility = this.toggleVisibility.bind(this)\n  }\n  toggleVisibility() {\n    this.setState((state) => ({\n      visibility: !state.visibility,\n    }))\n  }\n  //alternative way\n  /*\n  toggleVisibility() {\n    this.setState(state => {\n      if (state.visibility === true) {\n         return { visibility: false };\n       } else {\n         return { visibility: true };\n      }\n    });\n  }\n  */\n  render() {\n    if (this.state.visibility) {\n      return (\n        <div>\n          <button onClick={this.toggleVisibility}>Click Me</button>\n          <h1>Now you see me!</h1>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <button onClick={this.toggleVisibility}>Click Me</button>\n        </div>\n      )\n    }\n  }\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Sometimes you might need to know the previous state when updating the state. However, state updates may be asynchronous - this means React may batch multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"setState()")," calls into a single update. This means you can't rely on the previous value of ",(0,a.kt)("inlineCode",{parentName:"p"},"this.state")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"this.props")," when calculating the next value. So, you should not use code like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"this.setState({\n  counter: this.state.counter + this.props.increment,\n})\n")),(0,a.kt)("p",null,"Instead, you should pass ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," a function that allows you to access state and props. Using a function with ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," guarantees you are working with the most current values of state and props. This means that the above should be rewritten as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"this.setState((state, props) => ({\n  counter: state.counter + props.increment,\n}))\n")),(0,a.kt)("p",null,"You can also use a form without ",(0,a.kt)("inlineCode",{parentName:"p"},"props")," if you need only the ",(0,a.kt)("inlineCode",{parentName:"p"},"state"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"this.setState((state) => ({\n  counter: state.counter + 1,\n}))\n")),(0,a.kt)("p",null,"Note that you have to wrap the object literal in parentheses, otherwise JavaScript thinks it's a block of code."))}m.isMDXComponent=!0}}]);